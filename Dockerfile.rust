# Multi-stage build for Rust application
FROM rust:1.75 as builder

WORKDIR /app

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./

# Copy source code and required files for SQLx offline compilation
COPY src ./src
COPY .sqlx ./.sqlx
COPY migrations ./migrations

# Set environment for SQLx offline compilation
ENV SQLX_OFFLINE=true

# Build the application
RUN cargo build --release

# Runtime stage with minimal base
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    openssh-client \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Create necessary directories
RUN mkdir -p /app/instance /app/ssh && \
    chown -R 1000:1000 /app && \
    chmod 700 /app/ssh

# Copy the binary and migrations
COPY --from=builder /app/target/release/timekpr-ui-rust .
COPY --from=builder /app/migrations ./migrations

# Set default environment variables
ENV DATABASE_URL=sqlite:instance/timekpr.db
ENV HOST=0.0.0.0
ENV PORT=5000
ENV RUST_LOG=info

EXPOSE 5000

# Run as non-root user
USER 1000:1000

CMD ["./timekpr-ui-rust"]